package com.senwolf.design.geely.pattern.simplefactory;

/**
 * @author SenWolf
 * @date 2021/12/12 16:49
 */
public class Test {
    /**
     * 简单工厂
     * 适用场景：1、工厂类负责创建的对象比较少
     *         2、客户端（应用层）只知道传入工厂类的参数，对于如何创建对象（逻辑）不关心
     *
     * 简单工厂-优点：只需要传入一个正确的参数，就可以获取你所需要的对象而无需知道其创建细节（
     * 给我一杯咖啡，只要给我一杯咖啡就可以了，不需要知道怎么来的）
     * 简单工厂-缺点：工厂类的职责相对过重，增加新的产品需要修改工厂类的判断逻辑，违背开闭原则
     */
}
